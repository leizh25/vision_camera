name: Build and Release

on:
  push:
    tags:
      - 'v*' # 通过 `git tag v1.0.0 && git push origin v1.0.0` 触发

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # React Native 0.76 推荐 Node.js 18.x
      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      # Android 需要 JDK 17（React Native 0.76 兼容 JDK 11+，但推荐 17）
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install dependencies
        run: npm install

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      # 构建 Android APK（假设已配置签名）
      - name: Build Android Release
        run: |
          cd android
          ./gradlew assembleRelease

      # 上传 APK 到 Artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # React Native 0.76 需要 Xcode 14+
      - name: Select Xcode 14
        run: sudo xcode-select -s /Applications/Xcode_14.3.1.app

      - name: Install Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install dependencies
        run: npm install

      # CocoaPods 1.12+（兼容 RN 0.76）
      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods -v 1.12.1
          cd ios && pod install

      # 构建 iOS IPA（假设已配置签名和 ExportOptions.plist）
      - name: Build iOS IPA
        run: |
          cd ios
          xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphoneos -configuration Release archive -archivePath $PWD/build/YourApp.xcarchive
          xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $PWD/build

      # 上传 IPA 到 Artifact
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-release.ipa
          path: ios/build/YourApp.ipa

  create-release:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    steps:
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-release.apk
          path: dist

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-release.ipa
          path: dist

      # 创建 GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 上传 APK 到 Release
      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/android-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      # 上传 IPA 到 Release
      - name: Upload iOS IPA
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ios-release.ipa
          asset_name: YourApp.ipa
          asset_content_type: application/octet-stream
