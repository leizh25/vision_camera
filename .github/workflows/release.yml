name: iOS Development Build

on:
  push:
    tags:
      - 'dev-*' # 使用dev-开头的标签触发

jobs:
  build-ios:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 证书处理优化
    - name: Install Certificate
      env:
        CERT_CONTENT: ${{ secrets.IOS_CERTIFICATE }}
        CERT_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        echo "$CERT_CONTENT" | base64 -D > certificate.p12
        security create-keychain -p "$CERT_PASSWORD" build.keychain
        security import certificate.p12 -k build.keychain -P "$CERT_PASSWORD" -T /usr/bin/codesign
        security list-keychains -s build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$CERT_PASSWORD" build.keychain

    # 描述文件安装
    - name: Install Provisioning Profile
      env:
        PROFILE_CONTENT: ${{ secrets.PROVISIONING_PROFILE }}
      run: |
        echo "$PROFILE_CONTENT" | base64 -D > profile.mobileprovision
        UUID=$(/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i profile.mobileprovision))
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision


    # CocoaPods 1.12+（兼容 RN 0.76）
    - name: Install CocoaPods
      run: |
        sudo gem install cocoapods
        cd ios && pod install


    # 构建配置
    - name: Build IPA
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        PRODUCT_BUNDLE_IDENTIFIER: ${{ secrets.BUNDLE_ID }}
      run: |
        xcodebuild -project ios/vision_camera.xcodeproj \
          -scheme vision_camera \
          -configuration Debug \
          -destination 'generic/platform=iOS' \
          -archivePath build/vision_camera.xcarchive \
          CODE_SIGN_STYLE=Manual \
          PROVISIONING_PROFILE_SPECIFIER=${{ secrets.PROVISIONING_PROFILE_NAME }} \
          DEVELOPMENT_TEAM=$TEAM_ID \
          archive

        xcodebuild -exportArchive \
          -archivePath build/vision_camera.xcarchive \
          -exportOptionsPlist ios/ExportOptions-Development.plist \
          -exportPath ./build

    # Release发布优化
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: ${{ github.ref }}
        name: Development Build ${{ github.ref }}
        body: Automated development build
        prerelease: true

    - name: Upload IPA
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/vision_camera.ipa
        asset_name: vision_camera_development.ipa
        asset_content_type: application/octet-stream